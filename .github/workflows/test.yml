name: RWS Application Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '18'
  PHP_VERSION: '8.2'

jobs:
  # Frontend testing job (ÂÆåÂÖ®ÂÆâÂÆöÂåñ)
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        timeout-minutes: 5

      - name: Run ESLint
        run: npm run lint
        timeout-minutes: 3

      - name: Run TypeScript type checking
        run: npm run type-check
        timeout-minutes: 3

      - name: Build Frontend
        run: npm run build
        timeout-minutes: 10

      - name: Check build artifacts exist
        run: |
          if [ ! -d ".next" ]; then
            echo "‚ùå Build failed: .next directory not found"
            exit 1
          fi
          echo "‚úÖ Build artifacts found"
          ls -la .next/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-build
          path: ./frontend/.next/
          retention-days: 7

  # Backend testing job (ÂÆåÂÖ®ÂÆâÂÆöÂåñ)
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    timeout-minutes: 25
    defaults:
      run:
        working-directory: ./backend

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: rws_test
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=10s
          --health-retries=15
          --restart=unless-stopped

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: bcmath, ctype, fileinfo, json, mbstring, openssl, pdo, pdo_pgsql, tokenizer, xml

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --optimize-autoloader
        timeout-minutes: 5

      - name: Wait for Postgres with retry
        run: |
          echo "üîç Waiting for PostgreSQL to be ready..."
          for i in {1..30}; do
            if pg_isready -h 127.0.0.1 -p 5432 -U postgres; then
              echo "‚úÖ PostgreSQL is ready!"
              exit 0
            fi
            echo "‚è≥ Waiting for postgres at 127.0.0.1:5432... (attempt $i/30)"
            sleep 3
          done
          echo "‚ùå PostgreSQL did not become ready in time!"
          exit 1
        timeout-minutes: 5

      - name: Setup Laravel
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: rws_test
          DB_USERNAME: postgres
          DB_PASSWORD: password
        run: |
          echo "üîß Setting up Laravel environment..."
          cp .env.example .env.testing
          php artisan key:generate --env=testing
          php artisan config:cache --env=testing
          echo "üìä Running database migrations..."
          php artisan migrate:fresh --seed --env=testing
          echo "‚úÖ Laravel setup completed"
        timeout-minutes: 5

      - name: Run basic tests
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: rws_test
          DB_USERNAME: postgres
          DB_PASSWORD: password
        run: |
          echo "üß™ Running Laravel tests..."
          php artisan test --stop-on-failure --verbose
          echo "‚úÖ Tests completed successfully"
        timeout-minutes: 10

      - name: Check test results
        run: |
          if [ -d "storage/logs" ]; then
            echo "üìã Recent logs:"
            tail -n 20 storage/logs/laravel.log || echo "No log file found"
          fi
          echo "‚úÖ Backend tests completed"