name: RWS Application Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20.x'

jobs:
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        timeout-minutes: 5
      - name: Run ESLint
        run: npm run lint
        timeout-minutes: 3
      - name: Run TypeScript type checking
        run: npm run type-check
        timeout-minutes: 3
      - name: Build Frontend
        run: npm run build
        timeout-minutes: 10
      - name: Check build artifacts exist
        run: |
          if [ ! -d ".next" ]; then
            echo "‚ùå Build failed: .next directory not found"
            exit 1
          fi
          echo "‚úÖ Build artifacts found"
          ls -la .next/
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-build
          path: ./frontend/.next/
          retention-days: 7

  supabase-validation:
    name: Supabase Functions Validation
    runs-on: ubuntu-latest
    timeout-minutes: 12
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install Supabase CLI
        run: npm install supabase --save-dev
        timeout-minutes: 5
      - name: Validate Supabase Functions
        run: |
          echo "üîç Validating Supabase Functions structure..."
          if [ ! -f "supabase/functions/api/index.ts" ]; then
            echo "‚ùå Main API function not found"
            exit 1
          fi
          if [ ! -f "supabase/functions/api/deno.json" ]; then
            echo "‚ùå Deno configuration not found"
            exit 1
          fi
          curl -fsSL https://deno.land/install.sh | sh
          export PATH="$HOME/.deno/bin:$PATH"
          cd supabase/functions/api
          deno check index.ts
          deno check auth-handlers.ts
          deno check post-handlers.ts
          deno check utils.ts
          deno check types.ts
          echo "‚úÖ Supabase Functions Deno validation completed"
        timeout-minutes: 8
      - name: Check Supabase configuration
        run: |
          echo "üîç Checking Supabase configuration..."
          if [ ! -f "supabase/config.toml" ]; then
            echo "‚ùå Supabase config not found"
            exit 1
          fi
          echo "‚úÖ Supabase configuration validated"
        timeout-minutes: 2